/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package gym.module.gui;

import java.io.*;
import java.awt.Color;
import java.awt.EventQueue;
import javax.swing.*;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.Random;
import static gym.module.service.userServiceGenerator.services;
import static gym.module.user.checkLogin.*;

public class GuiApplication {

	  private JFrame frame,frame1,frame2,frame3,frame4;
	  private JTextField textField,textField_1, textField_2, textField_3, textField_4, textField_5, textField_6;

	  private JTextField textField_7, textField_8, textField_9, textField_10,textField_11, textField_12,textField_13,textField_14;


	  String customerName="",trainingPlan="",workingHour="",targetHours="",activities="",collectedData="";

	  String errorMessage ="", message, message1="";
	  String Username="",Password="",trainerName, age, experience;

	private static String datafilepath = "M:/1st Sem/Software Engineering/Project/5/java-gradle-template-main/app/src/main/resources/dataFile.csv";

	//Launch the application
	  public static void main(String[] args) {
	      EventQueue.invokeLater(new Runnable() {
	          public void run() {
	              try {
					  GuiApplication window = new GuiApplication();
	                  window.frame.setVisible(true);
	              } catch (Exception e) {
	                  e.printStackTrace();
	              }
	          }
	      });
	  }


	  // create the application
	  public GuiApplication() {
		  initialize();
	  }

	  // Initialize the contents of the frame

	public void initialize() {
	      frame = new JFrame();
	      frame.setBounds(100, 100, 370, 270);
	      frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	      frame.getContentPane().setLayout(null);
	      Color c1 = new Color(51, 153, 255);
	      frame.getContentPane().setBackground( c1 );

	      Color c2 = Color.white;
	      JLabel lblNewLabel = new JLabel("FITNESS MANAGEMENT APPLICATION");
	      lblNewLabel.setFont (new java.awt.Font("Arial", java.awt.Font.BOLD, 13));
	      lblNewLabel.setBounds(55, 12, 300, 33);
	      frame.getContentPane().add(lblNewLabel);
	      lblNewLabel.setForeground(c2);

	      // Username
	      JLabel lblUsername = new JLabel("Username");
		  lblUsername.setBounds(25, 70, 100, 15);
	      frame.getContentPane().add(lblUsername);
		  lblUsername.setForeground(c2);

	      textField = new JTextField();
	      textField.setBounds(150, 57, 180, 30);
	      frame.getContentPane().add(textField);
	      textField.setColumns(10);

	      //Password
	      JLabel lblPassword = new JLabel("Password");
		  lblPassword.setBounds(25, 117, 100, 15);
	      frame.getContentPane().add(lblPassword);
		  lblPassword.setForeground(c2);

	      textField_1 = new JTextField();
	      textField_1.setBounds(150, 107, 180, 30);
	      frame.getContentPane().add(textField_1);
	      textField_1.setColumns(10);

	      JButton btnSubmit = new JButton("Sign in");
	      btnSubmit.addActionListener(new ActionListener() {
	          public void actionPerformed(ActionEvent arg0) {
				  Username = textField.getText();
				  Password = textField_1.getText();
				  boolean userPresent = checkIfUserExists(Username, Password);
				  if (userPresent){
					  frame.setVisible(false);
					  modification(Username);
				  }
				  else{
					  errorMessage = "Wrong input credentials";
					  errorCheck(errorMessage);
				  }
	          }
	      });
	      btnSubmit.setBounds(40, 170, 92, 25);
	      frame.getContentPane().add(btnSubmit);

	      JButton btnReset = new JButton("Sign up");

	      btnReset.addActionListener(new ActionListener() {
	          public void actionPerformed(ActionEvent e) {
	              textField.setText("");
	              textField_1.setText("");
				  frame.setVisible(false);
				  signUp();

	          }
	      });
	      btnReset.setBounds(200, 170, 92, 25);
	      frame.getContentPane().add(btnReset);
	      frame.setVisible(true);
	  }

	public void modification(String name) {
		frame4 = new JFrame();
		frame4.setBounds(100, 100, 370, 230);
		frame4.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame4.getContentPane().setLayout(null);
		Color c1 = new Color(51, 153, 255);
		frame4.getContentPane().setBackground( c1 );

		Color c2 = Color.white;
		// to be modified
		JLabel lblNewLabel1 = new JLabel("Welcome "+name);
		lblNewLabel1.setFont (new java.awt.Font("Arial", java.awt.Font.BOLD, 15));
		lblNewLabel1.setBounds(100, 12, 300, 33);
		frame4.getContentPane().add(lblNewLabel1);
		lblNewLabel1.setForeground(c2);

		JButton btnSubmit = new JButton("Evaluate Customer Training Plan");
		btnSubmit.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				frame4.setVisible(false);
				boolean isValidTrainer;
				try {
					isValidTrainer = services.showUserCurrentData(name);
				} catch (IOException e) {
					throw new RuntimeException(e);
				}
				if (!isValidTrainer){
					errorMessage = "Sorry ! You don't have any customer listed under you";
					errorCheck(errorMessage);
				}
				else{
					try {
						message = printUserCurrentData(name);
						printMsg(message);
					} catch (IOException e) {
						throw new RuntimeException(e);
					}
					boolean tagidCheck = true;
					while(tagidCheck){
						String tag = JOptionPane.showInputDialog("Enter tagID of the customer");
						int tagID = Integer.parseInt(tag);
						try {
							if (checkTagID(tagID)){
								tagidCheck=false;
								String[] mod = inputModification();
								try {
									services.showUserTrainingConsistency(tagID);
									services.modifyTrainingPlan(tagID,mod[0],mod[1]);
									message = "Successfully updated";
									printMsg(message);
								} catch (IOException e) {
									throw new RuntimeException(e);
								}
							}
							else {
								message = "Invalid TagID";
								errorCheck(message);
							}
						} catch (IOException e) {
							throw new RuntimeException(e);
						}
					}


					//message = services.showUserIndividualTrainingData(tagID);
				}
				System.out.println(isValidTrainer);
				frame4.setVisible(false);
			}
		});
		btnSubmit.setBounds(30, 70, 300, 35);
		frame4.getContentPane().add(btnSubmit);

		JButton btnSubmit1 = new JButton("Add customer/client under your name");
		btnSubmit1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				addCustomer(name);

				frame4.setVisible(false);

			}
		});
		btnSubmit1.setBounds(30, 120, 300, 35);
		frame4.getContentPane().add(btnSubmit1);
		frame4.setVisible(true);
	}

	  // Add customer
	  public void addCustomer(String name) {
		  frame2 = new JFrame();
		  frame2.setBounds(100, 100, 390, 450);
		  frame2.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		  frame2.getContentPane().setLayout(null);
		  Color c1 = new Color(51, 153, 255);
		  frame2.getContentPane().setBackground( c1 );

		  Color c2 = Color.white;
		  JLabel lblNewLabel = new JLabel("CUSTOMER DETAILS");
		  lblNewLabel.setFont (new java.awt.Font("Arial", java.awt.Font.BOLD, 15));
		  lblNewLabel.setBounds(100, 12, 300, 33);
		  frame2.getContentPane().add(lblNewLabel);
		  lblNewLabel.setForeground(c2);

		  // Username
		  JLabel lblName = new JLabel("Name");
		  lblName.setBounds(25, 70, 100, 15);
		  frame2.getContentPane().add(lblName);

		  lblName.setForeground(c2);

		  textField_4 = new JTextField();
		  textField_4.setBounds(150, 66, 180, 30);
		  frame2.getContentPane().add(textField_4);
		  //textField_4.setEditable(false);
		  //textField_4.setText("**********");
		  textField_4.setColumns(10);

		  //Password

		  JLabel lblTrainingPlan = new JLabel("Training Plan");
		  lblTrainingPlan.setBounds(25, 117, 100, 15);
		  frame2.getContentPane().add(lblTrainingPlan);
		  lblTrainingPlan.setForeground(c2);

		  textField_5 = new JTextField();
		  textField_5.setBounds(150, 113, 180, 30);
		  frame2.getContentPane().add(textField_5);
		  textField_5.setColumns(10);

		  //Working Hour

	      JLabel lblWorkingHour = new JLabel("Working Hour");
		  lblWorkingHour.setBounds(25, 164, 87, 15);
		  frame2.getContentPane().add(lblWorkingHour);
		  lblWorkingHour.setForeground(c2);

		  textField_6 = new JTextField();
		  textField_6.setColumns(10);
		  textField_6.setBounds(150, 160, 180, 30);
		  frame2.getContentPane().add(textField_6);

		  //Target Hours

	      JLabel lblTargetHours = new JLabel("Target Hours");
		  lblTargetHours.setBounds(25, 211, 87, 15);
		  frame2.getContentPane().add(lblTargetHours);
		  lblTargetHours.setForeground(c2);

		  textField_7 = new JTextField();
		  textField_7.setColumns(10);
		  textField_7.setBounds(150, 207, 180, 30);
		  frame2.getContentPane().add(textField_7);

		  //Activities
		  JLabel lblActivities = new JLabel("Activities");
		  lblActivities.setBounds(25, 258, 87, 15);
		  frame2.getContentPane().add(lblActivities);
		  lblActivities.setForeground(c2);

		  textField_8 = new JTextField();
		  textField_8.setColumns(10);
		  textField_8.setBounds(150, 254, 180, 30);
		  frame2.getContentPane().add(textField_8);


		  //Collected Data

		  JLabel lblCollectedData = new JLabel("Collected Data");
		  lblCollectedData.setBounds(25, 305, 87, 15);
		  frame2.getContentPane().add(lblCollectedData);
		  lblCollectedData.setForeground(c2);

		  textField_9 = new JTextField();
		  textField_9.setColumns(10);
		  textField_9.setBounds(150, 301, 180, 30);
		  frame2.getContentPane().add(textField_9);

		  JButton btnSubmit = new JButton("Submit");
		  btnSubmit.addActionListener(new ActionListener() {
			  public void actionPerformed(ActionEvent arg0) {
				  customerName = textField_4.getText();
				  trainingPlan = textField_5.getText();
				  workingHour = textField_6.getText();
				  targetHours = textField_7.getText();
				  activities = textField_8.getText();
				  collectedData = textField_9.getText();

				  if(customerName.isEmpty() || trainingPlan.isEmpty()|| workingHour.isEmpty()|| targetHours.isEmpty()|| activities.isEmpty()|| collectedData.isEmpty()){
					  errorMessage = "Fill all the details";
					  errorCheck(errorMessage);
				  }
				  else{
					  //tagId generation
					  ArrayList<Integer> numbers = new ArrayList<Integer>();
					  Random ran = new Random();
					  int tagId = ran.nextInt(1000);
					  if(!numbers.contains(tagId)) {
						  numbers.add(tagId);
					  }
					  String newUserData = tagId + "," + customerName + "," + trainingPlan  + "," + 0 + "," + targetHours + "," + activities + "," +  collectedData + "," + name;
					  try {
						  services.addNewCustomer(newUserData,datafilepath);
						  message = "Successfully added";
						  printMsg(message);
					  } catch (IOException e) {
						  throw new RuntimeException(e);
					  }
					  frame2.setVisible(false);
				  }

			  }
		  });
		  btnSubmit.setBounds(50, 370, 92, 25);
		  frame2.getContentPane().add(btnSubmit);

		  JButton btnReset = new JButton("Reset");

		  btnReset.addActionListener(new ActionListener() {
			  public void actionPerformed(ActionEvent e) {
				  //userCustomer = newUser.createUserAccount(scan);
				  textField_4.setText("");
				  textField_5.setText("");
				  textField_6.setText(" ");
				  textField_7.setText(" ");
				  textField_8.setText(" ");
				  textField_9.setText(" ");
			  }
		  });
		  btnReset.setBounds(225, 370, 92, 25);
		  frame2.getContentPane().add(btnReset);
		  frame2.setVisible(true);
	  }

	public void signUp() {
		frame3 = new JFrame();
		frame3.setBounds(100, 100, 390, 400);
		frame3.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame3.getContentPane().setLayout(null);
		Color c1 = new Color(51, 153, 255);
		frame3.getContentPane().setBackground( c1 );

		Color c2 = Color.white;
		JLabel lblNewLabel = new JLabel("TRAINER DETAILS");
		lblNewLabel.setFont (new java.awt.Font("Arial", java.awt.Font.BOLD, 15));
		lblNewLabel.setBounds(120, 12, 300, 33);
		frame3.getContentPane().add(lblNewLabel);
		lblNewLabel.setForeground(c2);

		// Trainer Name
		JLabel lblTrainerName = new JLabel("Name");
		lblTrainerName.setBounds(25, 70, 100, 15);
		frame3.getContentPane().add(lblTrainerName);
		lblTrainerName.setForeground(c2);

		textField_10 = new JTextField();
		textField_10.setBounds(150, 66, 180, 30);
		frame3.getContentPane().add(textField_10);
		textField_10.setColumns(10);

		//Age
		JLabel lblTrainingPlan = new JLabel("Age");
		lblTrainingPlan.setBounds(25, 117, 100, 15);
		frame3.getContentPane().add(lblTrainingPlan);
		lblTrainingPlan.setForeground(c2);

		textField_11 = new JTextField();
		textField_11.setBounds(150, 113, 180, 30);
		frame3.getContentPane().add(textField_11);
		textField_11.setColumns(10);

		//Experience
		JLabel lblWorkingHour = new JLabel("Experience");
		lblWorkingHour.setBounds(25, 164, 87, 15);
		frame3.getContentPane().add(lblWorkingHour);
		lblWorkingHour.setForeground(c2);

		textField_12 = new JTextField();
		textField_12.setColumns(10);
		textField_12.setBounds(150, 160, 180, 30);
		frame3.getContentPane().add(textField_12);

		//username
		JLabel lblTrainerUsername = new JLabel("Username");
		lblTrainerUsername.setBounds(25, 211, 87, 15);
		frame3.getContentPane().add(lblTrainerUsername);
		lblTrainerUsername.setForeground(c2);

		textField_13 = new JTextField();
		textField_13.setColumns(10);
		textField_13.setBounds(150, 207, 180, 30);
		frame3.getContentPane().add(textField_13);

		//password
		JLabel lblTrainerPassword = new JLabel("Password");
		lblTrainerPassword.setBounds(25, 258, 87, 15);
		frame3.getContentPane().add(lblTrainerPassword);
		lblTrainerPassword.setForeground(c2);

		textField_14 = new JTextField();
		textField_14.setColumns(10);
		textField_14.setBounds(150, 254, 180, 30);
		frame3.getContentPane().add(textField_14);

		JButton btnSubmit = new JButton("Submit");
		btnSubmit.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				trainerName = textField_10.getText();
				age = textField_11.getText();
				experience = textField_12.getText();
				Username = textField_13.getText();
				Password = textField_14.getText();
				try{
					int age_int = Integer.parseInt(age);
					int experience_int = Integer.parseInt(experience);
					if (age_int<0 && experience_int<0){
						message="Please enter a valid input";
						errorCheck(message);
						return;
					}

				} catch (NumberFormatException e) {
					message="Please enter a valid input";
					errorCheck(message);
					throw new RuntimeException(e);
				}

				if(trainerName.isEmpty() || age.isEmpty()|| experience.isEmpty()|| Username.isEmpty()|| Password.isEmpty()){
					errorMessage = "Fill all the details";
					errorCheck(errorMessage);
				}
				else{
					boolean userPresent = checkIfUserExists(Username, Password);
					System.out.println(userPresent);
					if (userPresent){
						message = "Please try another username";
						errorCheck(message);
					}
					else{
						try {
							newUser.createUserAccount(Username,Password);
							message = "Successfully created";
							printMsg(message);
							frame3.setVisible(false);
							modification(Username);
						} catch (IOException e) {
							throw new RuntimeException(e);
						}
					}
				}

			}
		});
		btnSubmit.setBounds(50, 310, 92, 25);
		frame3.getContentPane().add(btnSubmit);

		JButton btnReset = new JButton("Reset");

		btnReset.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				//userCustomer = newUser.createUserAccount(scan);
				textField_4.setText("");
				textField_5.setText("");
				textField_6.setText(" ");
				textField_7.setText(" ");
				textField_8.setText(" ");
				textField_9.setText(" ");
			}
		});
		btnReset.setBounds(225, 310, 92, 25);
		frame3.getContentPane().add(btnReset);
		frame3.setVisible(true);
	}

	public String printUserCurrentData(String trainerName) throws IOException {
		boolean hasValidCustomers = false;
		//try(BufferedReader reader = new BufferedReader(new FileReader(datafilepath))) {
		try {
			BufferedReader reader = new BufferedReader(new FileReader(datafilepath));
			String entry;
			while((entry = reader.readLine()) != null) {
				String[] values = entry.split(",");
				if(values[0].equals("tagId")) {
					continue;
				}
				else {
					//check null
					if(values[7].equals(trainerName)) {
						message1 = message1 + "Tag Id : " + values[0] + ", Customer Name : " + values[1] + ", Training Plan : " + values[2] + ", Workout Hours completed : " + values[3] + ", Workout Hours Target : " + values[4]+ "\n";
//						System.out.println("Tag Id : " + values[0] + ", Customer Name : " + values[1] + ", Training Plan : "
//								+ values[2]  + ", Workout Hours completed : " + values[3] + ", Workout Hours Target : " + values[4]);
					}
				}
			}
			reader.close();
		}
		catch(FileNotFoundException e) {
			e.printStackTrace();
		}
		return message1;
	}
	public boolean checkTagID(int tagId) throws IOException {
		boolean validID = false;
		try {
			BufferedReader reader = new BufferedReader(new FileReader(datafilepath));
			String entry;
			while((entry = reader.readLine()) != null) {
				String[] values = entry.split(",");
				if(values[0].equals("tagId")) {
					continue;
				}
				else {
					if(Integer.parseInt(values[0]) == tagId) {
						validID = true;
					}
				}
			}
			//reader.close();
		}
		catch(FileNotFoundException e) {
			e.printStackTrace();
		}
		return validID;
	}
	public void printMsg(String Message) {
		JFrame f3 =new JFrame();
		JOptionPane.showMessageDialog(f3, Message);
	}
	public String[] inputModification(){
			JTextField xField = new JTextField(10);
			JTextField yField = new JTextField(10);
			JPanel myPanel = new JPanel();
			myPanel.add(new JLabel("Training Plan:"));
			myPanel.add(xField);
			myPanel.add(Box.createVerticalStrut(15)); // a spacer
			myPanel.add(new JLabel("Training Activities:"));
			myPanel.add(yField);
			int result = JOptionPane.showConfirmDialog(null, myPanel,
					"Please Enter Training Plan and Training Activities Values", JOptionPane.OK_CANCEL_OPTION);
			String [] m = new String[2];
			if (result == JOptionPane.CANCEL_OPTION){
				return null;
			}
			else if (result == JOptionPane.OK_OPTION) {
				m[0] = xField.getText();
				m[1] = yField.getText();
				System.out.println("Training Plan: " + xField.getText());
				System.out.println("Training Activities: " + yField.getText());
				return m;
			}
		return m;
	}
	public void errorCheck(String errorMessage) {
	      JFrame f2 =new JFrame();
	      JOptionPane.showMessageDialog(f2, errorMessage,"Alert",JOptionPane.WARNING_MESSAGE);
	  }
}
